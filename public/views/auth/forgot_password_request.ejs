<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Forgot Password</title>
  <link rel="stylesheet" href="/assets/dashboard/fonts/google_icon/google_icons.css" />
  <link rel="stylesheet" href="/assets/dashboard/styles/login/login.css" />
  <script src="/assets/dashboard/js/plugins/axios.js"></script>
  <script src="/assets/dashboard/js/plugins/sweetalert.js"></script>
</head>

<body>
  <div class="login_page">
    <div class="welcome-text">
      <h2>PASSWORD RESET</h2>
      <img width="150" height="150" src="/assets/dashboard/images/logo.png" alt="Logo" />
      <h2>PROBAHO SYSTEM</h2>
    </div>
    <div id="forgot-password">
      <div class="container">
        <div class="login_form">
          <div class="heading">
            <h3>Forgot Your Password?</h3>
          </div>
          <div class="bg1"></div>
          <div class="bg2"></div>
          <div class="bg3"></div>
          <div class="form_content">
            <form onsubmit="requestPasswordReset()" autocomplete="false">
              <p style="color: #555; font-size: small; text-align: start; margin-bottom: 20px;">
                Enter your email address and we will send you a link to reset your password.
              </p>
              <div class="form_group">
                <div class="input_body" style="display: flex; flex-direction: column; align-items: flex-start; gap: 4px;">
                  <div style="display: flex; align-items: center; gap: 8px; width: 100%;">
                    <span class="icon material-symbols-outlined">mail</span>
                    <label for="email" style="margin: 0;">
                      <div class="text">Email</div>
                    </label>
                  </div>
                  <input type="email" value="" placeholder="Enter your email" name="email" id="email" style="width: 100%; min-width: 0; outline: none;" required />
                </div>
              </div>
              <div class="form_group button_group">
                <div class="buttons" style="justify-content: center;">
                  <button type="submit" style="width: 100%;">
                    <div class="text">Send Password Reset Link</div>
                  </button>
                </div>
              </div>
              <div class="form_group" style="text-align: center; margin-top: 15px;">
                <a href="/" style="color: #007BFF; text-decoration: none; font-size: 0.9em;">Back to Home</a>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    axios.interceptors.request.use(
      function (config) {
        let form_errors = document.querySelectorAll('.form_error');
        [...form_errors].forEach((e) => e.remove());
        let has_errors = document.querySelectorAll('.form_group_error');
        [...has_errors].forEach((e) => e.classList.remove('form_group_error'));
        return config;
      },
      function (error) {
        return Promise.reject(error);
      },
    );

    axios.interceptors.response.use(
      function (response) {
        return response;
      },
      function (error) {
        if (error.response && error.response.data && error.response.data.status === 422) {
          let errors = error.response.data.data;
          errors.forEach((errorMsg) => { 
            let el = document.querySelector(`[name="${errorMsg.path}"]`);
            if (el) {
              el.parentNode?.parentNode.classList.add('form_group_error');
              el.parentNode?.parentNode.insertAdjacentHTML(
                'beforeend',
                `<div class="form_error">${errorMsg.msg}</div>`,
              );
            }
          });
          window.toaster(`${error.response.status} - ${error.response.statusText || 'Validation Error'}`);
        } else if (error.response && error.response.data && error.response.data.message) {
            window.toaster(error.response.data.message, 'error');
        } else {
            window.toaster('An unexpected error occurred.', 'error');
        }
        return Promise.reject(error);
      },
    );

    const requestPasswordReset = () => {
      event.preventDefault();
      const form = event.currentTarget;
      const email = form.email.value;

      if (!email) {
        window.toaster('Please enter your email address.', 'warning');
        return;
      }

      // Use the generic API endpoint
      axios.post('/api/v1/auth/forget', { email }) 
        .then((res) => {
          window.toaster('If an account with that email exists, a password reset link has been sent.', 'success');
          form.reset(); 
        })
        .catch((err) => {
          console.error(err);
        });
    };
  </script>
</body>
</html>
